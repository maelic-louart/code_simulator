

================================================================
== Vitis HLS Report for 'Bits_stuffing_Pipeline_VITIS_LOOP_113_1'
================================================================
* Date:           Tue Dec 19 07:23:47 2023

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        FPGA_simulator_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.811 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      170|      170|  1.700 us|  1.700 us|  170|  170|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_113_1  |      168|      168|         1|          1|          1|   168|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.03>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%new_data = alloca i32 1" [emitter.cpp:105->emitter.cpp:503]   --->   Operation 4 'alloca' 'new_data' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%bits_stuffed_data = alloca i32 1" [emitter.cpp:109->emitter.cpp:503]   --->   Operation 5 'alloca' 'bits_stuffed_data' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [emitter.cpp:108->emitter.cpp:503]   --->   Operation 7 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%compter = alloca i32 1" [emitter.cpp:103->emitter.cpp:503]   --->   Operation 8 'alloca' 'compter' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%data_load_read = read i168 @_ssdm_op_Read.ap_auto.i168, i168 %data_load"   --->   Operation 9 'read' 'data_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.03ns)   --->   "%store_ln103 = store i32 0, i32 %compter" [emitter.cpp:103->emitter.cpp:503]   --->   Operation 10 'store' 'store_ln103' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 11 [1/1] (1.03ns)   --->   "%store_ln108 = store i32 177, i32 %j" [emitter.cpp:108->emitter.cpp:503]   --->   Operation 11 'store' 'store_ln108' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 12 [1/1] (1.03ns)   --->   "%store_ln113 = store i9 167, i9 %i" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 12 'store' 'store_ln113' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 13 [1/1] (1.03ns)   --->   "%store_ln109 = store i8 0, i8 %bits_stuffed_data" [emitter.cpp:109->emitter.cpp:503]   --->   Operation 13 'store' 'store_ln109' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 14 [1/1] (1.03ns)   --->   "%store_ln105 = store i178 0, i178 %new_data" [emitter.cpp:105->emitter.cpp:503]   --->   Operation 14 'store' 'store_ln105' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body.i"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.81>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%i_42 = load i9 %i" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 16 'load' 'i_42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %i_42, i32 8" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 17 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln113 = br i1 %tmp, void %for.body.split.i_ifconv, void %for.body22.i.preheader.exitStub" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 18 'br' 'br_ln113' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%new_data_load_3 = load i178 %new_data" [emitter.cpp:123->emitter.cpp:503]   --->   Operation 19 'load' 'new_data_load_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%bits_stuffed_data_load = load i8 %bits_stuffed_data" [emitter.cpp:128->emitter.cpp:503]   --->   Operation 20 'load' 'bits_stuffed_data_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%j_load = load i32 %j" [emitter.cpp:124->emitter.cpp:503]   --->   Operation 21 'load' 'j_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%compter_load = load i32 %compter" [emitter.cpp:117->emitter.cpp:503]   --->   Operation 22 'load' 'compter_load' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln113 = zext i9 %i_42" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 23 'zext' 'zext_ln113' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%specpipeline_ln105 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_8" [emitter.cpp:105->emitter.cpp:503]   --->   Operation 24 'specpipeline' 'specpipeline_ln105' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%speclooptripcount_ln105 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 168, i64 168, i64 168" [emitter.cpp:105->emitter.cpp:503]   --->   Operation 25 'speclooptripcount' 'speclooptripcount_ln105' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%specloopname_ln113 = specloopname void @_ssdm_op_SpecLoopName, void @empty_44" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 26 'specloopname' 'specloopname_ln113' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%bit_select_i_i_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_load_read, i32 %zext_ln113" [emitter.cpp:115->emitter.cpp:503]   --->   Operation 27 'bitselect' 'bit_select_i_i_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.63ns)   --->   "%compter_4 = add i32 %compter_load, i32 1" [emitter.cpp:117->emitter.cpp:503]   --->   Operation 28 'add' 'compter_4' <Predicate = (!tmp)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.61ns)   --->   "%compter_5 = select i1 %bit_select_i_i_i, i32 %compter_4, i32 0" [emitter.cpp:115->emitter.cpp:503]   --->   Operation 29 'select' 'compter_5' <Predicate = (!tmp)> <Delay = 0.61> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%new_data_5 = bitset i178 @_ssdm_op_BitSet.i178.i178.i32.i1, i178 %new_data_load_3, i32 %j_load, i1 %bit_select_i_i_i" [emitter.cpp:123->emitter.cpp:503]   --->   Operation 30 'bitset' 'new_data_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.63ns)   --->   "%j_4 = add i32 %j_load, i32 4294967295" [emitter.cpp:124->emitter.cpp:503]   --->   Operation 31 'add' 'j_4' <Predicate = (!tmp)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.63ns)   --->   "%icmp_ln125 = icmp_eq  i32 %compter_5, i32 5" [emitter.cpp:125->emitter.cpp:503]   --->   Operation 32 'icmp' 'icmp_ln125' <Predicate = (!tmp)> <Delay = 1.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%new_data_6 = bitset i178 @_ssdm_op_BitSet.i178.i178.i32.i1, i178 %new_data_5, i32 %j_4, i1 0" [emitter.cpp:127->emitter.cpp:503]   --->   Operation 33 'bitset' 'new_data_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.39ns)   --->   "%bits_stuffed_data_1 = add i8 %bits_stuffed_data_load, i8 1" [emitter.cpp:128->emitter.cpp:503]   --->   Operation 34 'add' 'bits_stuffed_data_1' <Predicate = (!tmp)> <Delay = 1.39> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.39> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.63ns)   --->   "%j_5 = add i32 %j_load, i32 4294967294" [emitter.cpp:129->emitter.cpp:503]   --->   Operation 35 'add' 'j_5' <Predicate = (!tmp)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.89ns)   --->   "%new_data_7 = select i1 %icmp_ln125, i178 %new_data_6, i178 %new_data_5" [emitter.cpp:125->emitter.cpp:503]   --->   Operation 36 'select' 'new_data_7' <Predicate = (!tmp)> <Delay = 0.89> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.89> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.47ns)   --->   "%bits_stuffed_data_2 = select i1 %icmp_ln125, i8 %bits_stuffed_data_1, i8 %bits_stuffed_data_load" [emitter.cpp:125->emitter.cpp:503]   --->   Operation 37 'select' 'bits_stuffed_data_2' <Predicate = (!tmp)> <Delay = 0.47> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.61ns)   --->   "%j_6 = select i1 %icmp_ln125, i32 %j_5, i32 %j_4" [emitter.cpp:125->emitter.cpp:503]   --->   Operation 38 'select' 'j_6' <Predicate = (!tmp)> <Delay = 0.61> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.61ns)   --->   "%compter_6 = select i1 %icmp_ln125, i32 0, i32 %compter_5" [emitter.cpp:125->emitter.cpp:503]   --->   Operation 39 'select' 'compter_6' <Predicate = (!tmp)> <Delay = 0.61> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.41ns)   --->   "%i_43 = add i9 %i_42, i9 511" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 40 'add' 'i_43' <Predicate = (!tmp)> <Delay = 1.41> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.03ns)   --->   "%store_ln103 = store i32 %compter_6, i32 %compter" [emitter.cpp:103->emitter.cpp:503]   --->   Operation 41 'store' 'store_ln103' <Predicate = (!tmp)> <Delay = 1.03>
ST_2 : Operation 42 [1/1] (1.03ns)   --->   "%store_ln108 = store i32 %j_6, i32 %j" [emitter.cpp:108->emitter.cpp:503]   --->   Operation 42 'store' 'store_ln108' <Predicate = (!tmp)> <Delay = 1.03>
ST_2 : Operation 43 [1/1] (1.03ns)   --->   "%store_ln113 = store i9 %i_43, i9 %i" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 43 'store' 'store_ln113' <Predicate = (!tmp)> <Delay = 1.03>
ST_2 : Operation 44 [1/1] (1.03ns)   --->   "%store_ln109 = store i8 %bits_stuffed_data_2, i8 %bits_stuffed_data" [emitter.cpp:109->emitter.cpp:503]   --->   Operation 44 'store' 'store_ln109' <Predicate = (!tmp)> <Delay = 1.03>
ST_2 : Operation 45 [1/1] (1.03ns)   --->   "%store_ln105 = store i178 %new_data_7, i178 %new_data" [emitter.cpp:105->emitter.cpp:503]   --->   Operation 45 'store' 'store_ln105' <Predicate = (!tmp)> <Delay = 1.03>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln113 = br void %for.body.i" [emitter.cpp:113->emitter.cpp:503]   --->   Operation 46 'br' 'br_ln113' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%new_data_load = load i178 %new_data"   --->   Operation 47 'load' 'new_data_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%bits_stuffed_data_load_1 = load i8 %bits_stuffed_data"   --->   Operation 48 'load' 'bits_stuffed_data_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%compter_load_1 = load i32 %compter"   --->   Operation 49 'load' 'compter_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %compter_out, i32 %compter_load_1"   --->   Operation 50 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %bits_stuffed_data_out, i8 %bits_stuffed_data_load_1"   --->   Operation 51 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i178P0A, i178 %new_data_out, i178 %new_data_load"   --->   Operation 52 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 53 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.038ns
The critical path consists of the following:
	'alloca' operation 32 bit ('compter', emitter.cpp:103->emitter.cpp:503) [9]  (0.000 ns)
	'store' operation 0 bit ('store_ln103', emitter.cpp:103->emitter.cpp:503) of constant 0 on local variable 'compter', emitter.cpp:103->emitter.cpp:503 [11]  (1.038 ns)

 <State 2>: 5.811ns
The critical path consists of the following:
	'load' operation 32 bit ('compter_load', emitter.cpp:117->emitter.cpp:503) on local variable 'compter', emitter.cpp:103->emitter.cpp:503 [25]  (0.000 ns)
	'add' operation 32 bit ('compter', emitter.cpp:117->emitter.cpp:503) [31]  (1.631 ns)
	'select' operation 32 bit ('compter', emitter.cpp:115->emitter.cpp:503) [32]  (0.613 ns)
	'icmp' operation 1 bit ('icmp_ln125', emitter.cpp:125->emitter.cpp:503) [35]  (1.631 ns)
	'select' operation 178 bit ('new_data', emitter.cpp:125->emitter.cpp:503) [39]  (0.898 ns)
	'store' operation 0 bit ('store_ln105', emitter.cpp:105->emitter.cpp:503) of variable 'new_data', emitter.cpp:125->emitter.cpp:503 on local variable 'new_data', emitter.cpp:105->emitter.cpp:503 [48]  (1.038 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
