

================================================================
== Vitis HLS Report for 'Compute_CRC_Pipeline_VITIS_LOOP_81_2'
================================================================
* Date:           Tue Dec 19 07:23:46 2023

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        FPGA_simulator_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.833 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       23|       23|  0.230 us|  0.230 us|   23|   23|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_81_2  |       21|       21|         1|          1|          1|    21|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.83>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i_21 = alloca i32 1" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 4 'alloca' 'i_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%data_reversed_reload_read = read i168 @_ssdm_op_Read.ap_auto.i168, i168 %data_reversed_reload"   --->   Operation 5 'read' 'data_reversed_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (1.03ns)   --->   "%store_ln81 = store i5 0, i5 %i_21" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 6 'store' 'store_ln81' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc63.i"   --->   Operation 7 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = load i5 %i_21" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 8 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.36ns)   --->   "%icmp_ln81 = icmp_eq  i5 %i, i5 21" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 9 'icmp' 'icmp_ln81' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (1.36ns)   --->   "%add_ln81 = add i5 %i, i5 1" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 10 'add' 'add_ln81' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln81 = br i1 %icmp_ln81, void %for.inc63.split.i, void %for.inc.i.i.preheader.exitStub" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 11 'br' 'br_ln81' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i5 %i" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 12 'zext' 'zext_ln81' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specpipeline_ln81 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_8" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 13 'specpipeline' 'specpipeline_ln81' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%speclooptripcount_ln81 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 21, i64 21, i64 21" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 14 'speclooptripcount' 'speclooptripcount_ln81' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specloopname_ln81 = specloopname void @_ssdm_op_SpecLoopName, void @empty_18" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 15 'specloopname' 'specloopname_ln81' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %i, i3 0" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 16 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i8 %shl_ln" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 17 'zext' 'zext_ln83' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%bit_select_i1_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_reversed_reload_read, i32 %zext_ln83" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 18 'bitselect' 'bit_select_i1_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%or_ln83 = or i8 %shl_ln, i8 1" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 19 'or' 'or_ln83' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln83_1 = zext i8 %or_ln83" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 20 'zext' 'zext_ln83_1' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%bit_select_i2_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_reversed_reload_read, i32 %zext_ln83_1" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 21 'bitselect' 'bit_select_i2_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%or_ln83_1 = or i8 %shl_ln, i8 2" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 22 'or' 'or_ln83_1' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln83_2 = zext i8 %or_ln83_1" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 23 'zext' 'zext_ln83_2' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%bit_select_i3_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_reversed_reload_read, i32 %zext_ln83_2" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 24 'bitselect' 'bit_select_i3_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%or_ln83_2 = or i8 %shl_ln, i8 3" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 25 'or' 'or_ln83_2' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln83_3 = zext i8 %or_ln83_2" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 26 'zext' 'zext_ln83_3' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%bit_select_i4_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_reversed_reload_read, i32 %zext_ln83_3" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 27 'bitselect' 'bit_select_i4_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%or_ln83_3 = or i8 %shl_ln, i8 4" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 28 'or' 'or_ln83_3' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln83_4 = zext i8 %or_ln83_3" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 29 'zext' 'zext_ln83_4' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%bit_select_i5_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_reversed_reload_read, i32 %zext_ln83_4" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 30 'bitselect' 'bit_select_i5_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%or_ln83_4 = or i8 %shl_ln, i8 5" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 31 'or' 'or_ln83_4' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln83_5 = zext i8 %or_ln83_4" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 32 'zext' 'zext_ln83_5' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%bit_select_i6_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_reversed_reload_read, i32 %zext_ln83_5" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 33 'bitselect' 'bit_select_i6_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%or_ln83_5 = or i8 %shl_ln, i8 6" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 34 'or' 'or_ln83_5' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln83_6 = zext i8 %or_ln83_5" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 35 'zext' 'zext_ln83_6' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%bit_select_i7_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_reversed_reload_read, i32 %zext_ln83_6" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 36 'bitselect' 'bit_select_i7_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%or_ln83_6 = or i8 %shl_ln, i8 7" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 37 'or' 'or_ln83_6' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln83_7 = zext i8 %or_ln83_6" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 38 'zext' 'zext_ln83_7' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%bit_select_i8_i = bitselect i1 @_ssdm_op_BitSelect.i1.i168.i32, i168 %data_reversed_reload_read, i32 %zext_ln83_7" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 39 'bitselect' 'bit_select_i8_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%or_ln83_i = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i1.i1.i1.i1.i1.i1.i1.i1, i1 %bit_select_i8_i, i1 %bit_select_i7_i, i1 %bit_select_i6_i, i1 %bit_select_i5_i, i1 %bit_select_i4_i, i1 %bit_select_i3_i, i1 %bit_select_i2_i, i1 %bit_select_i1_i" [emitter.cpp:83->emitter.cpp:502]   --->   Operation 40 'bitconcatenate' 'or_ln83_i' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%list_bytes_addr = getelementptr i8 %list_bytes, i64 0, i64 %zext_ln81" [emitter.cpp:84->emitter.cpp:502]   --->   Operation 41 'getelementptr' 'list_bytes_addr' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (1.42ns)   --->   "%store_ln84 = store i8 %or_ln83_i, i5 %list_bytes_addr" [emitter.cpp:84->emitter.cpp:502]   --->   Operation 42 'store' 'store_ln84' <Predicate = (!icmp_ln81)> <Delay = 1.42> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 21> <RAM>
ST_1 : Operation 43 [1/1] (1.03ns)   --->   "%store_ln81 = store i5 %add_ln81, i5 %i_21" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 43 'store' 'store_ln81' <Predicate = (!icmp_ln81)> <Delay = 1.03>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln81 = br void %for.inc63.i" [emitter.cpp:81->emitter.cpp:502]   --->   Operation 44 'br' 'br_ln81' <Predicate = (!icmp_ln81)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 45 'ret' 'ret_ln0' <Predicate = (icmp_ln81)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.833ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln81', emitter.cpp:81->emitter.cpp:502) of constant 0 on local variable 'i', emitter.cpp:81->emitter.cpp:502 [5]  (1.038 ns)
	'load' operation 5 bit ('i', emitter.cpp:81->emitter.cpp:502) on local variable 'i', emitter.cpp:81->emitter.cpp:502 [8]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln81', emitter.cpp:81->emitter.cpp:502) [9]  (1.370 ns)
	'store' operation 0 bit ('store_ln84', emitter.cpp:84->emitter.cpp:502) of variable 'or_ln83_i', emitter.cpp:83->emitter.cpp:502 on array 'list_bytes' [43]  (1.425 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
