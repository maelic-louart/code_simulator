

================================================================
== Vitis HLS Report for 'Compute_CRC_Pipeline_VITIS_LOOP_92_4'
================================================================
* Date:           Tue Dec 19 07:23:47 2023

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        FPGA_simulator_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.469 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        4|        4|  40.000 ns|  40.000 ns|    4|    4|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_92_4  |        2|        2|         1|          1|          1|     2|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.46>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 4 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%crc_tmp_reversed_reload_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %crc_tmp_reversed_reload"   --->   Operation 5 'read' 'crc_tmp_reversed_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (1.03ns)   --->   "%store_ln92 = store i2 0, i2 %i" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 6 'store' 'store_ln92' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc141.i"   --->   Operation 7 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i_22 = load i2 %i" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 8 'load' 'i_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.00ns)   --->   "%icmp_ln92 = icmp_eq  i2 %i_22, i2 2" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 9 'icmp' 'icmp_ln92' <Predicate = true> <Delay = 1.00> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (1.00ns)   --->   "%add_ln92 = add i2 %i_22, i2 1" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 10 'add' 'add_ln92' <Predicate = true> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln92 = br i1 %icmp_ln92, void %for.inc141.split.i, void %Compute_CRC.exit.exitStub" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 11 'br' 'br_ln92' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln92 = zext i2 %i_22" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 12 'zext' 'zext_ln92' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specpipeline_ln92 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_8" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 13 'specpipeline' 'specpipeline_ln92' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%speclooptripcount_ln92 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 14 'speclooptripcount' 'speclooptripcount_ln92' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specloopname_ln92 = specloopname void @_ssdm_op_SpecLoopName, void @empty_15" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 15 'specloopname' 'specloopname_ln92' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%trunc_ln94 = trunc i2 %i_22" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 16 'trunc' 'trunc_ln94' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 %trunc_ln94, i3 0" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 17 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln94 = zext i4 %shl_ln" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 18 'zext' 'zext_ln94' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%bit_select_i9_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %crc_tmp_reversed_reload_read, i16 %zext_ln94" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 19 'bitselect' 'bit_select_i9_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%or_ln94 = or i4 %shl_ln, i4 1" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 20 'or' 'or_ln94' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln94_1 = zext i4 %or_ln94" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 21 'zext' 'zext_ln94_1' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%bit_select_i10_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %crc_tmp_reversed_reload_read, i16 %zext_ln94_1" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 22 'bitselect' 'bit_select_i10_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%or_ln94_1 = or i4 %shl_ln, i4 2" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 23 'or' 'or_ln94_1' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln94_2 = zext i4 %or_ln94_1" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 24 'zext' 'zext_ln94_2' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%bit_select_i11_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %crc_tmp_reversed_reload_read, i16 %zext_ln94_2" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 25 'bitselect' 'bit_select_i11_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%or_ln94_2 = or i4 %shl_ln, i4 3" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 26 'or' 'or_ln94_2' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln94_3 = zext i4 %or_ln94_2" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 27 'zext' 'zext_ln94_3' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%bit_select_i12_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %crc_tmp_reversed_reload_read, i16 %zext_ln94_3" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 28 'bitselect' 'bit_select_i12_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%or_ln94_3 = or i4 %shl_ln, i4 4" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 29 'or' 'or_ln94_3' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln94_4 = zext i4 %or_ln94_3" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 30 'zext' 'zext_ln94_4' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%bit_select_i13_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %crc_tmp_reversed_reload_read, i16 %zext_ln94_4" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 31 'bitselect' 'bit_select_i13_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%or_ln94_4 = or i4 %shl_ln, i4 5" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 32 'or' 'or_ln94_4' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln94_5 = zext i4 %or_ln94_4" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 33 'zext' 'zext_ln94_5' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%bit_select_i14_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %crc_tmp_reversed_reload_read, i16 %zext_ln94_5" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 34 'bitselect' 'bit_select_i14_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%or_ln94_5 = or i4 %shl_ln, i4 6" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 35 'or' 'or_ln94_5' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln94_6 = zext i4 %or_ln94_5" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 36 'zext' 'zext_ln94_6' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%bit_select_i15_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %crc_tmp_reversed_reload_read, i16 %zext_ln94_6" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 37 'bitselect' 'bit_select_i15_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%or_ln94_6 = or i4 %shl_ln, i4 7" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 38 'or' 'or_ln94_6' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln94_7 = zext i4 %or_ln94_6" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 39 'zext' 'zext_ln94_7' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%bit_select_i_i = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i16, i16 %crc_tmp_reversed_reload_read, i16 %zext_ln94_7" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 40 'bitselect' 'bit_select_i_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%or_ln94_i = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i1.i1.i1.i1.i1.i1.i1.i1, i1 %bit_select_i_i, i1 %bit_select_i15_i, i1 %bit_select_i14_i, i1 %bit_select_i13_i, i1 %bit_select_i12_i, i1 %bit_select_i11_i, i1 %bit_select_i10_i, i1 %bit_select_i9_i" [emitter.cpp:94->emitter.cpp:502]   --->   Operation 41 'bitconcatenate' 'or_ln94_i' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%list_bytes_addr = getelementptr i8 %list_bytes, i64 0, i64 %zext_ln92" [emitter.cpp:95->emitter.cpp:502]   --->   Operation 42 'getelementptr' 'list_bytes_addr' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (1.42ns)   --->   "%store_ln95 = store i8 %or_ln94_i, i5 %list_bytes_addr" [emitter.cpp:95->emitter.cpp:502]   --->   Operation 43 'store' 'store_ln95' <Predicate = (!icmp_ln92)> <Delay = 1.42> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 21> <RAM>
ST_1 : Operation 44 [1/1] (1.03ns)   --->   "%store_ln92 = store i2 %add_ln92, i2 %i" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 44 'store' 'store_ln92' <Predicate = (!icmp_ln92)> <Delay = 1.03>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln92 = br void %for.inc141.i" [emitter.cpp:92->emitter.cpp:502]   --->   Operation 45 'br' 'br_ln92' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 46 'ret' 'ret_ln0' <Predicate = (icmp_ln92)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.469ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln92', emitter.cpp:92->emitter.cpp:502) of constant 0 on local variable 'i', emitter.cpp:92->emitter.cpp:502 [5]  (1.038 ns)
	'load' operation 2 bit ('i', emitter.cpp:94->emitter.cpp:502) on local variable 'i', emitter.cpp:92->emitter.cpp:502 [8]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln92', emitter.cpp:92->emitter.cpp:502) [9]  (1.006 ns)
	'store' operation 0 bit ('store_ln95', emitter.cpp:95->emitter.cpp:502) of variable 'or_ln94_i', emitter.cpp:94->emitter.cpp:502 on array 'list_bytes' [44]  (1.425 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
