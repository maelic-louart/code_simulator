

================================================================
== Vitis HLS Report for 'Bytes_flipping'
================================================================
* Date:           Tue Dec 19 07:23:46 2023

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        FPGA_simulator_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.970 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       23|       23|  0.230 us|  0.230 us|   23|   23|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_44_1  |       21|       21|         1|          1|          1|    21|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.97>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%data_flipped = alloca i32 1" [emitter.cpp:41->emitter.cpp:501]   --->   Operation 4 'alloca' 'data_flipped' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (2.93ns)   --->   "%p_read_20 = read i178 @_ssdm_op_Read.ap_auto.i178, i178 %p_read" [emitter.cpp:40->emitter.cpp:501]   --->   Operation 6 'read' 'p_read_20' <Predicate = true> <Delay = 2.93> <CoreInst = "FIFO_SRL">   --->   Core 81 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 2.93> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = -1> <Depth = -1> <FIFO>
ST_1 : Operation 7 [1/1] (1.03ns)   --->   "%store_ln44 = store i5 0, i5 %i" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 7 'store' 'store_ln44' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 8 [1/1] (1.03ns)   --->   "%store_ln41 = store i168 0, i168 %data_flipped" [emitter.cpp:41->emitter.cpp:501]   --->   Operation 8 'store' 'store_ln41' <Predicate = true> <Delay = 1.03>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%br_ln44 = br void %for.inc.i" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 9 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i_29 = load i5 %i" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 10 'load' 'i_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.36ns)   --->   "%icmp_ln44 = icmp_eq  i5 %i_29, i5 21" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 11 'icmp' 'icmp_ln44' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (1.36ns)   --->   "%i_30 = add i5 %i_29, i5 1" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 12 'add' 'i_30' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln44 = br i1 %icmp_ln44, void %for.inc.split.i, void %Bytes_flipping.exit" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 13 'br' 'br_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%data_flipped_load = load i168 %data_flipped" [emitter.cpp:46->emitter.cpp:501]   --->   Operation 14 'load' 'data_flipped_load' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specpipeline_ln41 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_8" [emitter.cpp:41->emitter.cpp:501]   --->   Operation 15 'specpipeline' 'specpipeline_ln41' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%speclooptripcount_ln41 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 21, i64 21, i64 21" [emitter.cpp:41->emitter.cpp:501]   --->   Operation 16 'speclooptripcount' 'speclooptripcount_ln41' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specloopname_ln44 = specloopname void @_ssdm_op_SpecLoopName, void @empty_26" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 17 'specloopname' 'specloopname_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %i_29, i3 0" [emitter.cpp:46->emitter.cpp:501]   --->   Operation 18 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i8 %shl_ln" [emitter.cpp:46->emitter.cpp:501]   --->   Operation 19 'zext' 'zext_ln46' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%or_ln46 = or i8 %shl_ln, i8 7" [emitter.cpp:46->emitter.cpp:501]   --->   Operation 20 'or' 'or_ln46' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln46_1 = zext i8 %or_ln46" [emitter.cpp:46->emitter.cpp:501]   --->   Operation 21 'zext' 'zext_ln46_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%bit_select_i_i4_i = bitselect i1 @_ssdm_op_BitSelect.i1.i178.i32, i178 %p_read_20, i32 %zext_ln46" [emitter.cpp:46->emitter.cpp:501]   --->   Operation 22 'bitselect' 'bit_select_i_i4_i' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%data_flipped_1 = bitset i168 @_ssdm_op_BitSet.i168.i168.i32.i1, i168 %data_flipped_load, i32 %zext_ln46_1, i1 %bit_select_i_i4_i" [emitter.cpp:46->emitter.cpp:501]   --->   Operation 23 'bitset' 'data_flipped_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%or_ln47 = or i8 %shl_ln, i8 1" [emitter.cpp:47->emitter.cpp:501]   --->   Operation 24 'or' 'or_ln47' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i8 %or_ln47" [emitter.cpp:47->emitter.cpp:501]   --->   Operation 25 'zext' 'zext_ln47' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%or_ln47_1 = or i8 %shl_ln, i8 6" [emitter.cpp:47->emitter.cpp:501]   --->   Operation 26 'or' 'or_ln47_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln47_1 = zext i8 %or_ln47_1" [emitter.cpp:47->emitter.cpp:501]   --->   Operation 27 'zext' 'zext_ln47_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%bit_select_i_i5_i = bitselect i1 @_ssdm_op_BitSelect.i1.i178.i32, i178 %p_read_20, i32 %zext_ln47" [emitter.cpp:47->emitter.cpp:501]   --->   Operation 28 'bitselect' 'bit_select_i_i5_i' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%data_flipped_2 = bitset i168 @_ssdm_op_BitSet.i168.i168.i32.i1, i168 %data_flipped_1, i32 %zext_ln47_1, i1 %bit_select_i_i5_i" [emitter.cpp:47->emitter.cpp:501]   --->   Operation 29 'bitset' 'data_flipped_2' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%or_ln48 = or i8 %shl_ln, i8 2" [emitter.cpp:48->emitter.cpp:501]   --->   Operation 30 'or' 'or_ln48' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i8 %or_ln48" [emitter.cpp:48->emitter.cpp:501]   --->   Operation 31 'zext' 'zext_ln48' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%or_ln48_1 = or i8 %shl_ln, i8 5" [emitter.cpp:48->emitter.cpp:501]   --->   Operation 32 'or' 'or_ln48_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln48_1 = zext i8 %or_ln48_1" [emitter.cpp:48->emitter.cpp:501]   --->   Operation 33 'zext' 'zext_ln48_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%bit_select_i_i6_i = bitselect i1 @_ssdm_op_BitSelect.i1.i178.i32, i178 %p_read_20, i32 %zext_ln48" [emitter.cpp:48->emitter.cpp:501]   --->   Operation 34 'bitselect' 'bit_select_i_i6_i' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%data_flipped_3 = bitset i168 @_ssdm_op_BitSet.i168.i168.i32.i1, i168 %data_flipped_2, i32 %zext_ln48_1, i1 %bit_select_i_i6_i" [emitter.cpp:48->emitter.cpp:501]   --->   Operation 35 'bitset' 'data_flipped_3' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%or_ln49 = or i8 %shl_ln, i8 3" [emitter.cpp:49->emitter.cpp:501]   --->   Operation 36 'or' 'or_ln49' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i8 %or_ln49" [emitter.cpp:49->emitter.cpp:501]   --->   Operation 37 'zext' 'zext_ln49' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%or_ln49_1 = or i8 %shl_ln, i8 4" [emitter.cpp:49->emitter.cpp:501]   --->   Operation 38 'or' 'or_ln49_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln49_1 = zext i8 %or_ln49_1" [emitter.cpp:49->emitter.cpp:501]   --->   Operation 39 'zext' 'zext_ln49_1' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%bit_select_i_i7_i = bitselect i1 @_ssdm_op_BitSelect.i1.i178.i32, i178 %p_read_20, i32 %zext_ln49" [emitter.cpp:49->emitter.cpp:501]   --->   Operation 40 'bitselect' 'bit_select_i_i7_i' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%data_flipped_4 = bitset i168 @_ssdm_op_BitSet.i168.i168.i32.i1, i168 %data_flipped_3, i32 %zext_ln49_1, i1 %bit_select_i_i7_i" [emitter.cpp:49->emitter.cpp:501]   --->   Operation 41 'bitset' 'data_flipped_4' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%bit_select_i_i8_i = bitselect i1 @_ssdm_op_BitSelect.i1.i178.i32, i178 %p_read_20, i32 %zext_ln49_1" [emitter.cpp:50->emitter.cpp:501]   --->   Operation 42 'bitselect' 'bit_select_i_i8_i' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%data_flipped_5 = bitset i168 @_ssdm_op_BitSet.i168.i168.i32.i1, i168 %data_flipped_4, i32 %zext_ln49, i1 %bit_select_i_i8_i" [emitter.cpp:50->emitter.cpp:501]   --->   Operation 43 'bitset' 'data_flipped_5' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%bit_select_i_i1_i = bitselect i1 @_ssdm_op_BitSelect.i1.i178.i32, i178 %p_read_20, i32 %zext_ln48_1" [emitter.cpp:51->emitter.cpp:501]   --->   Operation 44 'bitselect' 'bit_select_i_i1_i' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%data_flipped_6 = bitset i168 @_ssdm_op_BitSet.i168.i168.i32.i1, i168 %data_flipped_5, i32 %zext_ln48, i1 %bit_select_i_i1_i" [emitter.cpp:51->emitter.cpp:501]   --->   Operation 45 'bitset' 'data_flipped_6' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%bit_select_i_i9_i = bitselect i1 @_ssdm_op_BitSelect.i1.i178.i32, i178 %p_read_20, i32 %zext_ln47_1" [emitter.cpp:52->emitter.cpp:501]   --->   Operation 46 'bitselect' 'bit_select_i_i9_i' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%data_flipped_7 = bitset i168 @_ssdm_op_BitSet.i168.i168.i32.i1, i168 %data_flipped_6, i32 %zext_ln47, i1 %bit_select_i_i9_i" [emitter.cpp:52->emitter.cpp:501]   --->   Operation 47 'bitset' 'data_flipped_7' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%bit_select_i_i_i = bitselect i1 @_ssdm_op_BitSelect.i1.i178.i32, i178 %p_read_20, i32 %zext_ln46_1" [emitter.cpp:53->emitter.cpp:501]   --->   Operation 48 'bitselect' 'bit_select_i_i_i' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%data_flipped_8 = bitset i168 @_ssdm_op_BitSet.i168.i168.i32.i1, i168 %data_flipped_7, i32 %zext_ln46, i1 %bit_select_i_i_i" [emitter.cpp:53->emitter.cpp:501]   --->   Operation 49 'bitset' 'data_flipped_8' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (1.03ns)   --->   "%store_ln44 = store i5 %i_30, i5 %i" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 50 'store' 'store_ln44' <Predicate = (!icmp_ln44)> <Delay = 1.03>
ST_1 : Operation 51 [1/1] (1.03ns)   --->   "%store_ln41 = store i168 %data_flipped_8, i168 %data_flipped" [emitter.cpp:41->emitter.cpp:501]   --->   Operation 51 'store' 'store_ln41' <Predicate = (!icmp_ln44)> <Delay = 1.03>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln44 = br void %for.inc.i" [emitter.cpp:44->emitter.cpp:501]   --->   Operation 52 'br' 'br_ln44' <Predicate = (!icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%data_flipped_load_1 = load i168 %data_flipped" [emitter.cpp:501]   --->   Operation 53 'load' 'data_flipped_load_1' <Predicate = (icmp_ln44)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln501 = ret i168 %data_flipped_load_1" [emitter.cpp:501]   --->   Operation 54 'ret' 'ret_ln501' <Predicate = (icmp_ln44)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.970ns
The critical path consists of the following:
	wire read operation ('p_read_20', emitter.cpp:40->emitter.cpp:501) on port 'p_read' (emitter.cpp:40->emitter.cpp:501) [4]  (2.932 ns)
	'store' operation 0 bit ('store_ln41', emitter.cpp:41->emitter.cpp:501) of variable 'data_flipped', emitter.cpp:53->emitter.cpp:501 on local variable 'data_flipped', emitter.cpp:41->emitter.cpp:501 [51]  (1.038 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
